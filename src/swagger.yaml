openapi: 3.0.0
info:
  title: Delaila Resto API
  description: API de Delailah Resto para presentar en Sprint Proyect 1 de Acamica.
  version: 1.0.0
servers:
  - url: http://localhost:3000/api/v2
    description: Server de prueba
tags:
  - name: Usuarios
    description: Seccion Usuarios
  - name: Pedidos
    description: Todo sobre tus pedidos
  - name: Productos
    description: Todo sobre los Productos de Delailah Resto
  - name: Only admins
    description: Acciones solo para administradores
paths:
  /register:
    post:
      tags:
      - "Usuarios"
      summary: Registro de un nuevo usuario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: usuario1
                password:
                  type: string
                  example: bartsimpson123
                nombre:
                  type: string
                  example: usuario
                apellido:
                  type: string
                  example: 1
                direccion:
                  type: string
                  example: direccion de ejemplo
                telefono:
                  type: string
                  example: 123123123
                email:
                  type: string
                  example: usuariocom
      responses:
        '201':   #status code
          description: User created.
          content:
            application/json:
              schema:
                type: object
                items:
                  type: string
        default:
          description: Unexpected error
  /login:
    post:
      tags:
      - "Usuarios"
      summary: Login de un usuario.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: usuario1
                password:
                  type: string
                  example: bartsimpson123
      responses:
        '200':    # status code
          description: Login exitoso
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: object
        '401':
          description: The specified user ID is invalid (not a number).
        '404':
          description: A user with the specified ID was not found.
        default:
          description: Unexpected error
  /pedido:
    get:
      tags:
      - "Pedidos"
      summary: Obtener listado de pedidos.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      responses:
        '200':    # status code
          description: Listado de pedidos
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
    post:
      tags:
      - "Pedidos"
      summary: Nuevo pedido.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                direccionenvio:
                  type: string
                  example: Av siempreviva 123
                payment:
                  type: string
                  example: efectivo
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      idproducto:
                        type: number
                        example: 1
                      cant:
                        type: number
                        example: 3
                      precio:
                        type: number
                        example: 200
              required:
                - payment
                - products           
      responses:
        '201':    # status code
          description: Pedido creado
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /pedido/{idpedido}:
    put:
      tags:
      - "Pedidos"
      summary: Actualizar pedido.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idpedido
          schema:
            type: number
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                products:
                  type: array
                  items:
                    type: object
                    properties:
                      idproducto:
                        type: number
                        example: 1
                      cant:
                        type: number
                        example: 3
                      precio:
                        type: number
                        example: 200
      responses:
        '200':    # status code
          description: Pedido actualizado
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
    delete:
      tags:
      - "Pedidos"
      summary: Cancelar un pedido.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idpedido
          schema:
            type: number
          required: true
      responses:
        '200':    # status code
          description: Pedido cancelado
          content:
            application/json:
              schema: 
                type: string
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /pedido/{idpedido}/confirm:
    put:
      tags:
      - "Pedidos"
      summary: Confirmar el pedido.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idpedido
          schema:
            type: number
          required: true
      responses:
        '200':    # status code
          description: Pedido actualizado
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /pedido/{idpedido}/newstatus:
    put:
      tags:
      - "Only admins"
      summary: Cambiar estado pedido.
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idpedido
          schema:
            type: number
          required: true
        - in: query
          name: newstatus
          schema:
            type: string
            enum:
              - En preparacion
              - Enviado
              - Entregado
          allowReserved: true
      responses:
        '200':    # status code
          description: Pedido actualizado
          content:
            application/json:
              schema: 
                type: object
                items: 
                  type: string
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /productos/{id}:
    get:
      tags:
      - "Productos"
      summary: Buscar un producto.
      parameters:
        - in: path
          name: id
          schema:
            type: number
          required: true
      responses:
        '200':    # status code
          description: Producto buscado
          content:
            application/json:
              schema: 
                type: object
                properties:
                  id:
                    type: number
                  nombre:
                    type: string
                  descripcion:
                    type: string
                  precio:
                    type: number
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /productos:
    get:
      tags:
      - "Productos"
      summary: Ver todos los Productos.
      responses:
        '200':    # status code
          description: Listado de productos
          content:
            application/json:
              schema: 
                type: array
                items: 
                  type: object
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
    post:
      tags:
      - "Only admins"
      summary: Nuevo Producto (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                nombre:
                  type: string
                  example: platoX
                descripcion:
                  type: string
                  example: Descripcion del plato
                precio:
                  type: number
                  example: 123
      responses:
        '200':    # status code
          description: Producto creado
          content:
            application/json:
              schema: 
                type: object
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /productos/{idproducto}:
    put:
      tags:
      - "Only admins"
      summary: Actualizar Producto (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idproducto
          schema:
            type: number
          required: true
      requestBody:
        required: false
        content:
          application/json:
            schema:
              type: object
              properties:
                descripcion:
                  type: string
                  example: Descripcion del producto
                precio:
                  type: number
                  example: 123  
      responses:
        '200':    # status code
          description: Producto actualizado
          content:
            application/json:
              schema: 
                type: object
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
    delete:
      tags:
      - "Only admins"
      summary: Eliminar Producto (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
        - in: path
          name: idproducto
          schema:
            type: number
          required: true
      responses:
        '200':    # status code
          description: Producto eliminado
          content:
            application/json:
              schema: 
                type: object
        '401':
          description: The specified user ID is invalid (not a number).
        default:
          description: Unexpected error
  /mediosdepago:
    get:
      tags:
        - "Only admins"
      summary: Muestra todos los medios de pago disponible (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      responses:
        '200':
          description: Medios de pago disponible
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    post:
      tags:
        - "Only admins"
      summary: Agregar un nuevo medio de pago (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                newmediopago:
                  type: string      
      responses:
        '201':
          description: Medios de pago creado
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
  /mediosdepago/{idpago}:
    put:
      tags:
        - "Only admins"
      summary: Actualiza un medio de pago (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      responses:
        '200':
          description: Medios de pago actualizado
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
    delete:
      tags:
        - "Only admins"
      summary: Elimina un medio de pago (requiere administrador).
      parameters:
        - in: header
          name: userid
          schema: 
            type: number
          required: true
      responses:
        '200':
          description: Medios de pago eliminado
          content:
            application/json:
              schema:
                type: string
                items:
                  type: string